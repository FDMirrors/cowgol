var subroutine_count: uint16 := 0;
var used_subroutine_count: uint16 := 0;

sub process_subroutine(thing_id: uint16)
    var subroutine: [SubroutineThing] := find_thing(thing_id) as [SubroutineThing];
    subroutine.segment := SEGMENT_OMIT;

    sub do_call(iop: [CallIop])
        add_reference(thing_id, iop.thing_id);
    end sub;

    loop
        var iop: [Iop] := read_iop();
        var ioptype: uint8 := iop.iop_kind & IOP_TYPE_MASK;

        if iop.iop_kind == IOP_END then
            break;
        elseif iop.iop_kind == IOP_CALL then
            do_call(iop as [CallIop]);
        end if;
    end loop;
end sub;

sub build_graph()
    loop
        var iheader: [IHeader] := read_iop_header();
        if iheader.thing_id == 0 then
            break;
        end if;

        process_subroutine(iheader.thing_id);
        subroutine_count := subroutine_count + 1;
    end loop;
end sub;

sub mark_main_subroutine()
    var main_id: uint16 := find_main_subroutine();
    var main: [SubroutineThing] := find_thing(main_id) as [SubroutineThing];
    main.segment := SEGMENT_UNKNOWN;
    used_subroutine_count := 1;
end sub;

sub scan_graph()
    var changed: uint8;

    loop
        changed := 0;
        var i: uint16 := 0;
        while i < graph_count loop
            var g: [GraphRecord] := &graph_base[i];
            var src: [SubroutineThing] := find_thing(g.src_id) as [SubroutineThing];
            var dest: [SubroutineThing] := find_thing(g.dest_id) as [SubroutineThing];

            if src.segment == SEGMENT_UNKNOWN then
                if dest.segment == SEGMENT_OMIT then
                    changed := 1;
                    dest.segment := SEGMENT_UNKNOWN;
                    used_subroutine_count := used_subroutine_count + 1;
                end if;
            end if;

            i := i + 1;
        end loop;

        if changed == 0 then
            break;
        end if;
    end loop;
end sub;

build_graph();
print("found ");
print_i16(subroutine_count);
print(" subroutines in ");
print_i16(graph_count);
print(" graph nodes\n");

mark_main_subroutine();
scan_graph();

print("found ");
print_i16(used_subroutine_count);
print(" reachable subroutines\n");

save_thing_table("things.dat");
