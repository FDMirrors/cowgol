var tokens_fd: uint8;

sub next_token()
    loop
        var buf: uint16[1];
        buf[0] := 0;
        file_getblock(tokens_fd, &buf[0] as [int8], 2);

        current_token := peeked_token;
        peeked_token := buf[0];

        var token_type: uint16 := current_token & TOKEN_TYPE_MASK;
        if token_type == TOKEN_TYPE_FILENAME then
            filename_id := current_token & TOKEN_VALUE_MASK;
        elseif token_type == TOKEN_TYPE_LINENO then
            line_no := current_token & TOKEN_VALUE_MASK;
        else
            break;
        end if;
    end loop;
end sub;

sub init_tokenreader(filename: [int8])
    tokens_fd := file_openin(filename);
    current_token := TOKEN_TYPE_LINENO;
    peeked_token := TOKEN_TYPE_LINENO;
    next_token();
end sub;

sub expect_token(expected: uint16)
    if current_token != expected then
        print("expected ");
        show_identifier(expected);
        print(" but got ");
        show_identifier(current_token);
        halt();
    end if;
    next_token();
end sub;

sub expect_identifier(out id: uint16)
    var thing: [Thing] := find_thing(current_token);
    if thing.thing_type != THING_IDENTIFIER then
        print("missing identifier");
        halt();
    end if;

    id := current_token;
    next_token();
end sub;
