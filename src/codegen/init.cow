print("CODEGEN\n");
init_string_table();
load_thing_table(things_dat);
init_iop_reader(iops_dat);
init_iop_writer(iops_out_dat);

var current_subroutine_id: uint16;

sub create_label(): (label: uint8)
    var subroutine: [SubroutineThing] := find_thing(current_subroutine_id) as [SubroutineThing];
    label := subroutine.label_count;
    if subroutine.label_count == 0xff then
        print("too many labels");
        halt();
    end if;
    subroutine.label_count := subroutine.label_count + 1;
end sub;

var int8_type: uint16 := find_bootstrap_symbol(TOKEN_INT8);
var uint8_type: uint16 := find_bootstrap_symbol(TOKEN_UINT8);
var int16_type: uint16 := find_bootstrap_symbol(TOKEN_INT16);
var uint16_type: uint16 := find_bootstrap_symbol(TOKEN_UINT16);
var int32_type: uint16 := find_bootstrap_symbol(TOKEN_INT32);
var uint32_type: uint16 := find_bootstrap_symbol(TOKEN_UINT32);
var constant_type: uint16 := find_bootstrap_symbol(TOKEN_CONSTANTT);
