
const STACK_SIZE := 128;

var workspaceSize: Size[NUM_WORKSPACES];

sub ArchAlignUp(value: Size, alignment: uint8): (newvalue: Size)
	var a := (alignment-1) as Size;
	newvalue := (value+a) & ~a;
end sub;

sub E_nl()
	E_b8('\n');
end sub;

sub ArchEmitSubRef(subr: [Subroutine])
	E_b8('f');
	E_u16(subr.id);
	E_b8('_');
	E(subr.name);
end sub;

sub ArchEmitWSRef(wid: uint8, address: Size)
	E("ws+");
	E_u16(address);
end sub;

sub ArchEmitHeader(coo: [Coo])
	E("#include \"cowgol.h\"\n");
	E("static i8 workspace[0x");
	E_h16((workspaceSize[0]+7) / 8);
	E("];\n");
	E("static i1* ws = (i1*)workspace;\n");
end sub;

sub ArchEmitFooter(coo: [Coo])
	E("void cmain(void) {\n");

	while coo != (0 as [Coo]) loop
		var main := coo.index.subroutines[0];
		if main != (0 as [Subroutine]) then
			E_b8('\t');
			ArchEmitSubRef(main);
			E("();\n");
		end if;
		coo := coo.next;
	end loop;

	E("}\n");

	# This is ridiculous, but can't be helped: write spaces to pad the end
	# of the file. Unix C compilers don't like trailing nuls.

	var padding := FCBExt(&outfcb) - FCBPos(&outfcb);
	while padding != 0 loop
		E_b8(' ');
		padding := padding - 1;
	end loop;
end sub;

