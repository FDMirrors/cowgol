include "tests/_framework.coh";

const THREE := 0x03300303;
const TWO := 0x02200202;
const ONE := 0x01100101;
const ZERO := 0;
const MONE := -ONE;
const MTWO := -TWO;
const MTHREE := -THREE;

var mthree: int32 := MTHREE;
var mtwo: int32 := MTWO;
var mone: int32 := MONE;
var zero: int32 := ZERO;
var one: int32 := ONE;
var two: int32 := TWO;
var three: int32 := THREE;
var deadbeef: int32 := 0xdeadbeef;
#var pdeadbeef: [int32] := &deadbeef;
#var mdeadbeef: int32 := -0xdeadbeef;

sub add_test()
    print("one+two==three"); if one+two==three then yes(); else no(); end if;
    print("one+mtwo==mone"); if one+mtwo==mone then yes(); else no(); end if;
    print("one+one==two"); if one+one==two then yes(); else no(); end if;
    print("zero+one==one"); if zero+one==one then yes(); else no(); end if;
    print("two+mtwo==zero"); if two+mtwo==zero then yes(); else no(); end if;

    print("one+TWO==three"); if one+TWO==three then yes(); else no(); end if;
    print("one+MTWO==mone"); if one+MTWO==mone then yes(); else no(); end if;
    print("one+ONE==two"); if one+ONE==two then yes(); else no(); end if;
    print("zero+ONE==one"); if zero+ONE==one then yes(); else no(); end if;
    print("two+MTWO==zero"); if two+MTWO==zero then yes(); else no(); end if;

    print("ONE+two==three"); if ONE+two==three then yes(); else no(); end if;
    print("ONE+mtwo==mone"); if ONE+mtwo==mone then yes(); else no(); end if;
    print("ONE+one==two"); if ONE+one==two then yes(); else no(); end if;
    print("ZERO+one==one"); if ZERO+one==one then yes(); else no(); end if;
    print("TWO+mtwo==zero"); if TWO+mtwo==zero then yes(); else no(); end if;
end sub;
add_test();

sub sub_test()
    print("one-two==mone"); if one-two==mone then yes(); else no(); end if;
    print("one-mtwo==three"); if one-mtwo==three then yes(); else no(); end if;
    print("one-one==zero"); if one-one==zero then yes(); else no(); end if;
    print("zero-one==mone"); if zero-one==mone then yes(); else no(); end if;
    print("two-mone==three"); if two-mone==three then yes(); else no(); end if;

    print("one-TWO==mone"); if one-TWO==mone then yes(); else no(); end if;
    print("one-MTWO==three"); if one-MTWO==three then yes(); else no(); end if;
    print("one-ONE==zero"); if one-ONE==zero then yes(); else no(); end if;
    print("zero-ONE==mone"); if zero-ONE==mone then yes(); else no(); end if;
    print("two-MONE==three"); if two-MONE==three then yes(); else no(); end if;

    print("ONE-two==mone"); if ONE-two==mone then yes(); else no(); end if;
    print("ONE-mtwo==three"); if ONE-mtwo==three then yes(); else no(); end if;
    print("ONE-one==zero"); if ONE-one==zero then yes(); else no(); end if;
    print("ZERO-one==mone"); if ZERO-one==mone then yes(); else no(); end if;
    print("TWO-mone==three"); if TWO-mone==three then yes(); else no(); end if;
end sub;
sub_test();

sub neg_test()
    print("-two == mtwo");  if -two == mtwo then yes(); else no(); end if;
    print("-one == mone");  if -one == mone then yes(); else no(); end if;
    print("-zero == zero"); if -zero == zero then yes(); else no(); end if;
    print("-mone == one");  if -mone == one then yes(); else no(); end if;
    print("-mtwo == two");  if -mtwo == two then yes(); else no(); end if;
end sub;
neg_test();

#sub extra_test()
#    print("deadbeef+deadbeef=0xbd5b7dde");
#    if (deadbeef+deadbeef)==0xbd5b7dde then yes(); else no(); end if;
#    print("deadbeef-deadbeef=0x00000000");
#    if (deadbeef-deadbeef)==0x00000000 then yes(); else no(); end if;
#
#    print("pdeadbeef[0]+deadbeef=0xbd5b7dde");
#    if (pdeadbeef[0]+deadbeef)==0xbd5b7dde then yes(); else no(); end if;
#    print("deadbeef+pdeadbeef[0]=0xbd5b7dde");
#    if (deadbeef+pdeadbeef[0])==0xbd5b7dde then yes(); else no(); end if;
#
#    print("presult test");
#    var result: int32;
#    var presult: [int32] := &result;
#    presult[0] := pdeadbeef[0] + pdeadbeef[0];
#    if result==0xbd5b7dde then yes(); else no(); end if;
#
#    print("complex backwards sub");
#    result := -1;
#    if (-presult[0]) == 1 then yes(); else no(); end if;
#end sub;
#extra_test();

