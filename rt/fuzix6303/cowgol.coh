var LOMEM: [uint8];
var HIMEM: [uint8];

sub Exit() is
end sub;

sub ExitWithError() is
end sub;

sub AlignUp(in: intptr): (out: intptr) is
	out := in;
end sub;

sub print_char(c: uint8) is
	@asm "ldx #1";
	@asm "pshx";
	@asm "ldx #", c;
	@asm "pshx";
	@asm "ldx #1";
	@asm "pshx";
	@asm "ldd #0x0803";
	@asm "swi";
	@asm "pulx";
	@asm "pulx";
	@asm "pulx";
end sub;

sub MemSet(buf: [uint8], byte: uint8, len: uint16) is
	var bufend := buf + len;
	loop
		if buf == bufend then
			return;
		end if;
		[buf] := byte;
		buf := buf + 1;
	end loop;
end sub;

include "common.coh";

