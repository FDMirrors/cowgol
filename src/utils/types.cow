
sub pointer_of(type_id: uint16): (ptr_type_id: uint16)
    var buf: PointerThing[1];
    buf[0].thing_type := THING_POINTER;
    buf[0].thing_size := PointerThing@bytes;
    buf[0].width := 2;
    buf[0].element_id := type_id;
    ptr_type_id := add_thing_by_value(&buf[0] as [Thing]);
end sub;

sub array_of(type_id: uint16, element_count: uint16): (array_type_id: uint16)
    var type: [TypeThing] := find_thing(type_id) as [TypeThing];

    var buf: ArrayThing[1];
    buf[0].thing_type := THING_ARRAY;
    buf[0].thing_size := ArrayThing@bytes;
    buf[0].width := element_count * type.width;
    buf[0].element_id := type_id;
    buf[0].element_count := element_count;
    array_type_id := add_thing_by_value(&buf[0] as [Thing]);
end sub;

sub get_type_of_thing(thing_id: uint16): (type_id: uint16)
    var thing: [TypedThing] := find_thing(thing_id) as [TypedThing];
    if (thing.thing_type & THING_TYPED) == 0 then
        print("thing is not typed");
        halt();
    end if;

    type_id := thing.type_id;
end sub;
