record TemporaryVariable
    variable_id: uint16;
    type_id: uint16;
    uses: uint8;
end record;

var temporaries: TemporaryVariable[16];

sub init_temporaries()
    zero_memory(&temporaries[0] as [int8], temporaries@bytes);
end sub;

sub create_temporary(type_id: uint16): (thing_id: uint16)
    var index: uint8 := 0;
    while index < temporaries@size loop
        if temporaries[index].uses == 0 then
            if temporaries[index].type_id == type_id then
                # reuse old temporary
                thing_id := temporaries[index].variable_id;
            else
                thing_id := create_thing(THING_VARIABLE, VariableThing@bytes);
                temporaries[index].variable_id := thing_id;
                var variable: [VariableThing] := find_thing(thing_id) as [VariableThing];
                variable.type_id := type_id;
            end if;
            temporaries[index].uses := 1;
            return;
        end if;
        index := index + 1;
    end loop;
    print("ran out of temporary variables");
    halt();
end sub;
