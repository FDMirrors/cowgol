var ioptab_top: [int8] := HIMEM;
var ioptab_size: uint16 := 0;
var iopfd: uint8;

sub emit(kind: uint8, size: uint8, out ptr: [Iop])
    ioptab_size := ioptab_size + size;
    ptr := &ioptab_top[0-ioptab_size] as [Iop];
    ptr.iop_kind := kind;
    ptr.iop_size := size;
end sub;

sub flush_iops(oldtop: uint16)
    var header: IHeader[1];
    header[0].thing_id := current_subroutine_id;
    header[0].iop_size := ioptab_size - oldtop;
    file_putblock(iopfd, &header[0] as [int8], IHeader@bytes);

    while ioptab_size > oldtop loop
        var iop: [Iop] := &ioptab_top[0-ioptab_size] as [Iop];
        var size: uint8 := iop.iop_size;
        file_putblock(iopfd, iop as [int8], size);
        ioptab_size := ioptab_size - size;
    end loop;
end sub;

sub open_iopfile(filename: [int8])
    iopfd := file_openout(filename);
end sub;

sub close_iopfile()
    file_close(iopfd);
end sub;
