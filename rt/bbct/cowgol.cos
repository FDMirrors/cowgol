&X _mul4
&X _divu4
&X _remu4
&X _cmp4
&X _cmps4

&S shiftdata
&W shiftdata 0 12

&X _lshift1
; Shifts the 1-byte value at XA left Y bits.
``:
	sta ``_ptr+0
	stx ``_ptr+1
``_loop:
``_ptr = *+1
	asl $ffff
	dey
	bne ``_loop
	rts

&X _rshiftu1
; Logical shift the 1-byte value at XA right Y bits.
``:
	sta ``_ptr+0
	stx ``_ptr+1
``_loop:
``_ptr = *+1
	lsr $ffff
	dey
	bne ``_loop
	rts

&X _rshifts1
; Arithmetic shift the 1-byte value at XA right Y bits.
``:
	sta `$shiftdata.1.0
	stx `$shiftdata.1.1
	tya
	tax
	lda (`$shiftdata.1.0), y
``_loop:
	cmp #$80
	ror
	dex
	bne ``_loop
	sta (`$shiftdata.1.0), y
	rts

