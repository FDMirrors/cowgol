var tokens_fcb: FCB;

sub next_raw_token(): (token: uint16)
    tokens_fcb.address := &token as [int8];
    tokens_fcb.count := 2;
    fcb_read(&tokens_fcb);
end sub;

sub next_token()
    var token: uint16;
    loop
        token := next_raw_token();

        $if DEBUG
            where_am_i();
            print(" token ");
            print_hex_i16(token);
            print_newline();
        $endif

        if token == TOKEN_FILENAME then
            filename_id := next_raw_token();
            emit_filename(filename_id);
        elseif token == TOKEN_LINENUMBER then
            line_no := next_raw_token();
            emit_linenumber(line_no);
        else
            break;
        end if;
    end loop;

    current_token := peeked_token;
    peeked_token := token;
end sub;

sub init_tokenreader(filename: [int8])
    if fcb_openin(&tokens_fcb, filename) != 0 then
        print("cannot open tokens file");
        halt();
    end if;
    next_token();
    next_token();
end sub;

sub deinit_tokenreader()
    fcb_close(&tokens_fcb);
end sub;

sub expect_token(expected: uint16)
    if current_token != expected then
        print("expected ");
        show_identifier(expected);
        print(" but got ");
        show_identifier(current_token);
        halt();
    end if;
    next_token();
end sub;

sub expect_identifier(): (id: uint16)
    var thing: [Thing] := find_thing(current_token);
    if thing.thing_type != THING_IDENTIFIER then
        print("missing identifier");
        halt();
    end if;

    id := current_token;
    next_token();
end sub;

sub show_progress()
    print_i32(fcb_tell(&tokens_fcb));
    print_char('/');
    print_i32(fcb_ext(&tokens_fcb));
    print_char('\r');
end sub;
