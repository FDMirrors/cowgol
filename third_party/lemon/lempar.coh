# %include sections from the grammar
%%

# makeheaders token definitions
%%

# control settings
%%

# parsing tables
%%

# fallback rules
%%

# token names
var yyTokenName: [uint8][] := { 
%%
};

# rule names
var yyRuleName: [uint8][YYNRULE] := {
%%
};

# destructors
%%

# stack overflow code
%%

# For rule J, yyRuleInfoLhs[J] contains the symbol on the left-hand side
# of that rule
var yyRuleInfoLhs: YYCODETYPE[] := {
%%
};

# For rule J, yyRuleInfoNRhs[J] contains the negative of the number
# of symbols on the right-hand side of that rule.
var yyRuleInfoNRhs: int8[] := {
%%
};

# reduce actions
sub PerformReduceAction(action: int8)
%%
end sub;

# parse failure code
%%

# syntax error code
%%

# parse accept code
%%

