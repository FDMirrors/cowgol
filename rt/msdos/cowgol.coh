var LOMEM: [uint8];
@asm "mov ", LOMEM, ", LOMEM";

var HIMEM: [uint8];
@asm "mov ", HIMEM, ", 0";

sub Exit() is
	@asm "int 0x20";
end sub;

sub ExitWithError() is
	@asm "int 0x20";
end sub;

sub AlignUp(in: intptr): (out: intptr) is
	out := in;
end sub;

sub print_char(c: uint8) is
	if c == 10 then
		@asm "mvi e, 13";
		@asm "mvi c, 2";
		@asm "call 5";
	end if;
	@asm "lda", c;
	@asm "mov e, a";
	@asm "mvi c, 2";
	@asm "call 5";
end sub;

sub MemSet(buf: [uint8], byte: uint8, len: uint16) is
	var bufend := buf + len;
	loop
		if buf == bufend then
			return;
		end if;
		[buf] := byte;
		buf := buf + 1;
	end loop;
end sub;

include "common.coh";

