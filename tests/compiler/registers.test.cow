# This test will only run with the bootstrap compiler.

$include "src/string_lib.cow"
$include "src/arch/bootstrap/fcb.cow"
$include "src/arch/bbc/globals.cow"
$include "src/arch/bbc/host.cow"
$include "src/utils/names.cow"
$include "src/utils/stringtable.cow"
$include "src/utils/things.cow"
$include "src/utils/types.cow"
$include "src/utils/iops.cow"

const VALUE_CACHE_SIZE := 16;

type RegId := uint8;
const REG_A     := 0b0000_0001; # 0
const REG_B     := 0b0000_0010; # 1
const REG_C     := 0b0000_0100; # 2
const REG_D     := 0b0000_1000; # 3
const REG_E     := 0b0001_0000; # 4
const REG_BC    := 0b0010_0000; # 5
const REG_DE    := 0b0100_0000; # 6
const ALL_REGS  := 0b0111_1111;
const NUM_REGS  := 7;

var reg_interference: RegId[NUM_REGS] := {
    REG_A,
    REG_B | REG_BC,
    REG_C | REG_BC,
    REG_D | REG_DE,
    REG_E | REG_DE
    REG_BC | REG_B | REG_C,
    REG_DE | REG_D | REG_E
};

sub reg_save(reg: RegId, ea: [EffectiveAddress])
    print("save 0x");
    print_hex_i8(reg);
    print(": ");
    print_ea(ea);
    print_newline();
end sub;

sub reg_load(reg: RegId, ea: [EffectiveAddress])
    print("load 0x");
    print_hex_i8(reg);
    print(": ");
    print_ea(ea);
    print_newline();
end sub;

sub print_regs(regs: RegId)
    if regs == 0            then print("(none) "); end if;
    if (regs & REG_A) != 0  then print("A "); end if;
    if (regs & REG_B) != 0  then print("B "); end if;
    if (regs & REG_C) != 0  then print("C "); end if;
    if (regs & REG_D) != 0  then print("D "); end if;
    if (regs & REG_E) != 0  then print("E "); end if;
    if (regs & REG_BC) != 0 then print("BC "); end if;
    if (regs & REG_DE) != 0 then print("DE "); end if;
end sub;

sub halt()
    fail("halted");
end sub;

$set DEBUG
$include "src/codegen/registers.cow"

sub simple_allocation_test()
    print("\nSimple allocation test\n");
    reg_reset();
    var location: RegId := reg_alloc(REG_B);
    location := reg_alloc(REG_BC|REG_DE);
    reg_free(REG_B);
    location := reg_alloc(REG_BC|REG_DE);
end sub;
simple_allocation_test();
