var ptr8: [int8];
var ptr32: [int32];
var i8: int8;
var i32: int32;
var array8: int8[4];
var array32: int32[4];
var i: uint8 := 99;
var j: int8 := 99;

# OBJADR 8 bit
i8 := array8[3];
i8 := array8[i];
i8 := array8[j];

# OBJADR 32 bit
i32 := array32[3];
i32 := array32[i];
i32 := array32[j];

# PTRADR 8 bit
i8 := ptr8[3];
i8 := ptr8[i];
i8 := ptr8[j];

# PTRADR 32 bit
i32 := ptr32[3];
i32 := ptr32[i];
i32 := ptr32[j];

# address of OBJADR 8 bit
ptr8 := &array8[3];
ptr8 := &array8[i];
ptr8 := &array8[j];

# address of OBJADR 32 bit
ptr32 := &array32[3];
ptr32 := &array32[i];
ptr32 := &array32[j];

# These don't work with the bootstrap compiler.
#
## repeated indexing of OBJADR 8 bit
#ptr8 := &(&(&array8[3])[1])[1];
#ptr8 := &(&(&array8[i])[1])[1];
#ptr8 := &(&(&array8[j])[1])[300];
#
## load of repeated index of OBJADR 8 bit
#i8 := (&(&array8[3])[1])[1];
#
## repeated indexing of OBJADR 32 bit
#ptr32 := &(&(&array32[3])[1])[1];
#ptr32 := &(&(&array32[i])[1])[1];
#ptr32 := &(&(&array32[j])[1])[1];
#
## load of repeated index of OBJADR 32 bit
#i32 := (&(&array32[3])[1])[1];

record Subrecord
    i: int8;
    j: int8;
end record;

record Fnord
    i: int32;
    j: int8;
    array: int8[10];
    subrecord: Subrecord;
end record;

# These don't work with the bootstrap compiler.
#
#var fnord: Fnord;
#i8 := fnord.j;
#i8 := (fnord.array)[5];
#i8 := (fnord.array)[300];
#i8 := fnord.subrecord.j;
#
#var pfnord: [Fnord] := &fnord;
#i8 := pfnord.j;
#i8 := (pfnord.array)[5];
#i8 := (pfnord.array)[300];
#i8 := pfnord.subrecord.j;

ptr8 := ptr32 as [int8];
