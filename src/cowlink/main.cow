include "cowgol.coh";
include "argv.coh";
include "strings.coh";
include "malloc.coh";
include "file.coh";

include "src/cowlink/utils.coh";
include "src/cowlink/cooread.coh";
include "src/cowlink/asmwrite.coh";
include "src/cowlink/graph.coh";

print("COWLINK: ");
print_i16((GetFreeMemory() >> 10) as uint16);
print("kB free\n");

var coos: [Coo] := 0 as [Coo];
var outputFilename: [uint8] := 0 as [uint8];

sub SyntaxError()
	print("Syntax error\n");
end sub;

sub AddInputFile(filename: [uint8])
	print("Adding input file: ");
	print(filename);
	print_nl();

	var coo := OpenAndLoadCoo(filename);
	print("Calculating dependency graph...\n");
	CalculateDependencyGraph(coo);
	coo.next := coos;
	coos := coo;
end sub;

ArgvInit();
loop
	var arg := ArgvNext();
	if arg == (0 as [uint8]) then
		break;
	end if;

	if (StrICmp(arg, "-o") == 0) then
		outputFilename := ArgvNext();
	elseif [arg] == '-' then
		SyntaxError();
	else
		AddInputFile(arg);
	end if;
end loop;

if outputFilename == 0 as [uint8] then
	print("No output filename specified\n");
end if;

var outputFcb: FCB;
if FCBOpenOut(&outputFcb, outputFilename) != 0 then
	CannotOpen(outputFilename);
end if;
print("Writing output file...\n");
WriteSubroutinesToOutputFile(&outputFcb, coos);
var i := FCBClose(&outputFcb);

print("done: ");
print_i16((GetFreeMemory() >> 10) as uint16);
print("kB free\n");

