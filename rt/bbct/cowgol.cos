&X _mul4
&X _divu4
&X _remu4
&X _cmp4
&X _cmps4

&S shiftdata
&W shiftdata 0 12

&X _lshift1
; Shifts A left Y bits.
``:
	dey
	bmi ``_exit
	asl
	jmp ``
``_exit:
	rts

&X _rshiftu1
; Logical shift A right Y bits.
``:
	dey
	bmi ``_exit
	lsr
	jmp ``
``_exit:
	rts

&X _rshifts1
; Arithmetic shift A right Y bits.
``:
	dey
	bmi ``_exit
	cmp #$80
	ror
	jmp ``
``_exit:
	rts

