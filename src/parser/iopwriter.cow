var ioptab_top: [int8] := HIMEM;
var ioptab_size: uint16 := 0;
var iopfd: uint8;

sub emit(kind: uint8, size: uint8, out ptr: [Iop])
    ioptab_size := ioptab_size + 1;
    ioptab_top[0-ioptab_size] := size;
    ioptab_size := ioptab_size + size;
    ptr := &ioptab_top[0-ioptab_size] as [Iop];
    zero_memory(ptr as [int8], size);
    ptr.iop_kind := kind;
    ptr.iop_size := size;
end sub;

sub emit_simple(kind: uint8)
    var iop: [Iop] := emit(kind, Iop@bytes);
end sub;

sub emit_simple_pushing(kind: uint8)
    var iop: [PushingIop] := emit(kind, PushingIop@bytes) as [PushingIop];
end sub;

sub emit_label(label_id: uint16)
    var label_iop: [LabelIop] := emit(IOP_LABEL, LabelIop@bytes) as [LabelIop];
    label_iop.label_id := label_id;
end sub;

sub emit_goto(label_id: uint16)
    var goto_iop: [BranchingIop] := emit(IOP_GOTO, BranchingIop@bytes) as [BranchingIop];
    goto_iop.label_id := label_id;
end sub;

sub create_label(out label_id: uint16)
    label_id := create_thing(THING_LABEL, LabelThing@bytes);
end sub;

sub merge_label(srclabel_id: uint16, destlabel_id: uint16)
    var srclabel: [LabelThing];
    loop
        srclabel := find_thing(srclabel_id) as [LabelThing];
        if srclabel.thing_type == THING_LABEL then
            break;
        else
            srclabel_id := srclabel.target;
        end if;
    end loop;

    srclabel.thing_type := THING_LABELREF;
    srclabel.target := destlabel_id;
end sub;

sub flush_iops(oldtop: uint16)
    var header: IHeader[1];
    header[0].thing_id := current_subroutine_id;
    file_putblock(iopfd, &header[0] as [int8], IHeader@bytes);

    var offset: uint16 := oldtop;
    while offset < ioptab_size loop
        offset := offset + 1;
        var size: uint8 := ioptab_top[0-offset];
        offset := offset + size;
        var iop: [Iop] := &ioptab_top[0-offset] as [Iop];
        file_putblock(iopfd, iop as [int8], size);
    end loop;

    ioptab_size := oldtop;
end sub;

sub open_iopfile(filename: [int8])
    iopfd := file_openout(filename);
end sub;

sub close_iopfile()
    var buf: IHeader[1];
    buf[0].thing_id := 0;
    file_putblock(iopfd, &buf[0] as [int8], IHeader@bytes);
    file_close(iopfd);
end sub;
