record FCB
	dr: uint8;
	f: uint8[11];
	ex: uint8;
	s1: uint8;
	s2: uint8;
	rc: uint8;
	d: uint8[16];
	cr: uint8;
	r: uint16;
	r2: uint8;
end record;

sub MemSet(buf: [uint8], byte: uint8, len: uint16)
	var bufend := buf + len;
	loop
		if buf == bufend then
			return;
		end if;
		[buf] := byte;
		buf := buf + 1;
	end loop;
end sub;

sub CpmParseFilename(fcb: [FCB], filename: [uint8])
	sub fill(dest: [uint8], src: [uint8], len: uint8): (srcout: [uint8])
		loop
			var c := [src];
			if (c == 0) or (c == '.') then
				c := ' ';
			elseif (c == '*') then
				c := '?';
			else
				src := src + 1;
			end if;
			[dest] := c;
			dest := dest + 1;

			len := len - 1;
			if len == 0 then
				break;
			end if;
		end loop;
		srcout := src;
	end sub;

	MemSet(fcb as [uint8], 0, @bytesof FCB);
	MemSet(&fcb.f[0] as [uint8], ' ', 11);
	filename := fill(&fcb.f[0], filename, 8);

	loop
		var c := [filename];
		if c == 0 then
			return;
		end if;
		if c == '.' then
			break;
		end if;
		filename := filename + 1;
	end loop;

	filename := fill(&fcb.f[8], filename+1, 3);
end sub;

sub CpmOpenFile(fcb: [FCB]): (r: uint8)
	@asm "lhld ", fcb;
	@asm "xchg";
	@asm "mvi c, 15";
	@asm "call 5";
	@asm "sta ", r;
end sub;

sub CpmCloseFile(fcb: [FCB]): (r: uint8)
	@asm "lhld ", fcb;
	@asm "xchg";
	@asm "mvi c, 16";
	@asm "call 5";
	@asm "sta ", r;
end sub;

sub CpmCreateFile(fcb: [FCB]): (r: uint8)
	@asm "lhld ", fcb;
	@asm "xchg";
	@asm "mvi c, 22";
	@asm "call 5";
	@asm "sta ", r;
end sub;

sub CpmDeleteFile(fcb: [FCB]): (r: uint8)
	@asm "lhld ", fcb;
	@asm "xchg";
	@asm "mvi c, 19";
	@asm "call 5";
	@asm "sta ", r;
end sub;

