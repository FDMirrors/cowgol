var tokens_fd: int8;

sub next_raw_token(): (token: uint16)
    var buf: uint16[1];
    buf[0] := 0;
    file_getblock(tokens_fd, &buf[0] as [int8], 2);
    token := buf[0];
end sub;

sub next_token()
    var token: uint16;
    loop
        token := next_raw_token();

        if token == TOKEN_FILENAME then
            filename_id := next_raw_token();
            emit_filename(filename_id);
        elseif token == TOKEN_LINENUMBER then
            line_no := next_raw_token();
            emit_linenumber(line_no);
        else
            break;
        end if;
    end loop;

    current_token := peeked_token;
    peeked_token := token;
end sub;

sub init_tokenreader(filename: [int8])
    tokens_fd := file_openin(filename);
    next_token();
    next_token();
end sub;

sub expect_token(expected: uint16)
    if current_token != expected then
        print("expected ");
        show_identifier(expected);
        print(" but got ");
        show_identifier(current_token);
        halt();
    end if;
    next_token();
end sub;

sub expect_identifier(): (id: uint16)
    var thing: [Thing] := find_thing(current_token);
    if thing.thing_type != THING_IDENTIFIER then
        print("missing identifier");
        halt();
    end if;

    id := current_token;
    next_token();
end sub;
