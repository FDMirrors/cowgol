var LOMEM: [uint8];
var _args: [uint8];
@asm "lda #LOMEM & 255";
@asm "sta ", LOMEM;
@asm "sta ", _args;
@asm "lda #LOMEM / 256";
@asm "sta ", LOMEM, "+1";
@asm "sta ", _args, "+1";

var HIMEM: [uint8] := 0xf800 as [uint8];

sub ExitWithError() is
	@asm "brk";
	@asm ".byte 0, 65, 66, 69, 78, 68, 0";
end sub;

sub AlignUp(in: intptr): (out: intptr) is
	out := in;
end sub;

sub print_char(c: uint8) is
	@asm "lda ", c;
	@asm "cmp #$0a";
	@asm "bne *+4";
	@asm "lda #$0d";
	@asm "jsr $ffe3"; # OSASCII
end sub;

sub MemSet(buf: [uint8], byte: uint8, len: uint16) is
	var bufend := buf + len;
	loop
		if buf == bufend then
			return;
		end if;
		[buf] := byte;
		buf := buf + 1;
	end loop;
end sub;

include "common.coh";

