sub arch_gen_copy_word(iop: [BEIop])
    sub address_of()
        var candidates: uint8;
        if iop.dest.flags == EA_DEREF then
            candidates := REG_A;
        else
            candidates := REG_A|REG_X;
        end if;

        var location: uint8 := allocate_reg(candidates);
        ld_imm_adr_lo(location, &iop.left);
        save_value_with_index_or_offset(location, &iop.dest, 0);
        ld_imm_adr_hi(location, &iop.left);
        save_value_with_index_or_offset(location, &iop.dest, 1);
    end sub;

    check_wide_ea(&iop.left);
    check_wide_ea(&iop.right);
    if is_number_thing(iop.left.obj_id) != 0 then
        var value: uint16 := get_value_of_number(iop.left.obj_id) as uint16;
        var candidates: uint8;
        if iop.dest.flags == EA_DEREF then
            candidates := REG_A;
        else
            candidates := REG_A|REG_X;
        end if;

        var location: uint8 := find_or_load_int(value as uint8, candidates);
        save_value_with_index_or_offset(location, &iop.dest, 0);
        free_reg(location);
        location := find_or_load_int((value >> 8) as uint8, candidates);
        save_value_with_index_or_offset(location, &iop.dest, 1);
    elseif is_string_thing(iop.left.obj_id) != 0 then
        address_of();
    elseif is_typed_thing(iop.left.obj_id) != 0 then
        if iop.left.flags == EA_LEA then
            address_of();
        else
            arch_gen_copy_wide(iop);
        end if;
    else
        print("don't know how to load ");
        print_ea(&iop.left);
        halt();
    end if;
end sub;
