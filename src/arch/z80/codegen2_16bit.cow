sub arch_gen_copy_word(iop: [BEIop])
    $if DEBUG
        print("* GENERATE copy word: ");
        print_ea(&iop.left);
        print(" -> ");
        print_ea(&iop.dest);
        print_newline();
    $endif

    var location: RegSet := reg_find_or_load(REG_16BIT, &iop.left);
    reg_cache_value(location, &iop.dest);
    reg_value_is_precious(&iop.dest);
end sub;

sub arch_gen_add_word(iop: [BEIop])
    $if DEBUG
        print("* GENERATE add word: ");
        print_ea(&iop.left);
        print(" + ");
        print_ea(&iop.right);
        print(" -> ");
        print_ea(&iop.dest);
        print_newline();
    $endif

    var left: RegSet := reg_find_or_load(REG_HL|REG_BC|REG_DE, &iop.left);

    # At least one register must be in REG_HL.
    var rightcandidates: RegSet;
    if left == REG_HL then
        rightcandidates := REG_HL|REG_BC|REG_DE;
    else
        rightcandidates := REG_HL;
    end if;
    var right: RegSet := reg_find_or_load(rightcandidates, &iop.left);
    
    var otherregnum: uint8;
    if left == REG_HL then
        otherregnum := get_z80_regnum(right);
        reg_evict(right);
    else
        otherregnum := get_z80_regnum(left);
        reg_evict(left);
    end if;
    write_byte(0x09 | otherregnum);
    reg_cache_value(REG_HL, &iop.dest);
    reg_value_is_precious(&iop.dest);
end sub;
