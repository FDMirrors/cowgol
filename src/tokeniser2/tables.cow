var yy_accept: uint8[185] := {0, 0, 0, 0, 0, 80, 78, 76, 77, 77, 78, 54, 75, 2, 3, 78, 4, 5, 6, 7, 8, 9, 10, 11, 74, 74, 12, 14, 15, 78, 19, 78, 53, 22, 23, 24, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 25, 26, 27, 28, 63, 62, 60, 79, 76, 77, 1, 75, 0, 0, 74, 74, 0, 0, 0, 13, 16, 17, 18, 20, 21, 0, 0, 0, 53, 53, 34, 53, 53, 53, 53, 53, 42, 53, 53, 53, 46, 53, 53, 53, 53, 53, 63, 61, 59, 55, 56, 57, 61, 70, 0, 70, 0, 0, 0, 0, 71, 72, 73, 0, 0, 0, 0, 33, 53, 53, 53, 40, 53, 53, 53, 45, 53, 53, 49, 53, 51, 53, 0, 69, 67, 64, 65, 66, 0, 0, 0, 0, 0, 53, 53, 53, 38, 41, 43, 53, 53, 53, 50, 53, 58, 0, 0, 0, 0, 32, 35, 36, 53, 53, 53, 53, 53, 52, 68, 29, 30, 0, 53, 39, 53, 47, 48, 0, 53, 53, 31, 37, 53, 44, 0, };
var yy_ec: uint8[256] := {0, 1, 1, 1, 1, 1, 1, 1, 1, 2, 3, 1, 1, 4, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 5, 6, 7, 1, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 21, 21, 21, 21, 21, 22, 22, 23, 24, 25, 26, 27, 1, 28, 29, 29, 29, 29, 29, 29, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 31, 32, 33, 34, 35, 1, 36, 37, 38, 39, 40, 41, 42, 43, 44, 30, 45, 46, 47, 48, 49, 50, 30, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, };
var yy_meta: uint8[64] := {0, 1, 1, 2, 3, 1, 4, 1, 1, 1, 5, 1, 1, 1, 1, 1, 1, 1, 1, 6, 6, 6, 6, 1, 1, 1, 1, 1, 1, 6, 7, 1, 4, 1, 1, 7, 6, 6, 6, 6, 6, 6, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 1, 1, 1, 1, };
var yy_base: uint16[197] := {0, 0, 0, 61, 65, 266, 267, 263, 267, 261, 237, 267, 0, 267, 267, 230, 267, 267, 267, 267, 267, 53, 267, 267, 57, 61, 235, 267, 59, 234, 60, 51, 0, 267, 267, 267, 18, 208, 209, 43, 208, 215, 206, 56, 203, 213, 198, 208, 214, 206, 267, 267, 267, 267, 0, 267, 267, 84, 246, 267, 267, 0, 237, 91, 89, 98, 102, 130, 0, 267, 267, 267, 267, 267, 267, 188, 197, 56, 0, 205, 0, 203, 194, 189, 201, 186, 0, 189, 190, 183, 0, 60, 198, 194, 182, 188, 0, 267, 267, 267, 267, 267, 0, 267, 221, 220, 219, 218, 217, 216, 105, 133, 0, 172, 185, 181, 163, 0, 185, 75, 180, 0, 170, 168, 177, 0, 167, 161, 0, 166, 0, 167, 0, 267, 267, 267, 267, 267, 0, 172, 171, 163, 169, 163, 154, 162, 161, 0, 0, 152, 152, 142, 0, 146, 267, 171, 128, 122, 133, 267, 0, 0, 116, 122, 97, 106, 88, 0, 267, 267, 267, 86, 79, 0, 95, 0, 0, 77, 89, 85, 267, 0, 67, 0, 267, 154, 161, 168, 170, 177, 184, 191, 194, 98, 196, 96, 93, };
var yy_def: uint8[197] := {0, 184, 1, 185, 185, 184, 184, 184, 184, 184, 184, 184, 186, 184, 184, 187, 184, 184, 184, 184, 184, 184, 184, 184, 184, 184, 184, 184, 184, 184, 184, 184, 188, 184, 184, 184, 188, 188, 188, 188, 188, 188, 188, 188, 188, 188, 188, 188, 188, 188, 184, 184, 184, 184, 189, 184, 184, 190, 184, 184, 184, 186, 184, 191, 184, 184, 184, 184, 192, 184, 184, 184, 184, 184, 184, 184, 184, 184, 188, 188, 188, 188, 188, 188, 188, 188, 188, 188, 188, 188, 188, 188, 188, 188, 188, 188, 189, 184, 184, 184, 184, 184, 193, 184, 184, 184, 184, 184, 184, 194, 184, 184, 192, 184, 184, 184, 184, 188, 188, 188, 188, 188, 188, 188, 188, 188, 188, 188, 188, 188, 188, 188, 195, 184, 184, 184, 184, 184, 196, 184, 184, 184, 184, 188, 188, 188, 188, 188, 188, 188, 188, 188, 188, 188, 184, 184, 184, 184, 184, 184, 188, 188, 188, 188, 188, 188, 188, 188, 184, 184, 184, 184, 188, 188, 188, 188, 188, 184, 188, 188, 184, 188, 188, 188, 0, 184, 184, 184, 184, 184, 184, 184, 184, 184, 184, 184, 184, };
var yy_nxt: uint8[331] := {0, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 25, 25, 26, 27, 28, 29, 30, 31, 32, 32, 33, 6, 34, 35, 6, 36, 37, 38, 32, 39, 32, 40, 32, 41, 32, 42, 32, 43, 44, 32, 45, 46, 47, 32, 48, 49, 32, 32, 32, 50, 51, 52, 53, 55, 55, 79, 56, 55, 55, 80, 56, 64, 65, 65, 65, 65, 65, 65, 65, 65, 65, 65, 65, 70, 71, 73, 74, 75, 83, 98, 84, 88, 57, 66, 76, 115, 57, 126, 155, 116, 105, 154, 77, 132, 89, 67, 183, 65, 65, 65, 65, 110, 127, 68, 110, 98, 65, 65, 65, 65, 110, 110, 182, 110, 110, 66, 144, 145, 181, 180, 179, 99, 178, 177, 100, 176, 101, 67, 106, 111, 102, 107, 111, 108, 175, 68, 174, 109, 111, 111, 111, 111, 111, 111, 54, 54, 54, 54, 54, 54, 54, 61, 173, 172, 61, 61, 61, 61, 62, 62, 62, 62, 171, 62, 62, 78, 78, 96, 170, 169, 168, 96, 96, 96, 97, 167, 97, 97, 97, 97, 97, 104, 166, 104, 104, 104, 104, 104, 112, 112, 138, 138, 165, 164, 163, 162, 161, 160, 159, 158, 157, 156, 153, 152, 151, 150, 149, 148, 147, 146, 143, 142, 141, 140, 139, 133, 137, 136, 135, 134, 133, 131, 130, 129, 128, 125, 124, 123, 122, 121, 120, 119, 118, 117, 114, 113, 103, 58, 95, 94, 93, 92, 91, 90, 87, 86, 85, 82, 81, 72, 69, 63, 60, 59, 58, 184, 5, 184, 184, 184, 184, 184, 184, 184, 184, 184, 184, 184, 184, 184, 184, 184, 184, 184, 184, 184, 184, 184, 184, 184, 184, 184, 184, 184, 184, 184, 184, 184, 184, 184, 184, 184, 184, 184, 184, 184, 184, 184, 184, 184, 184, 184, 184, 184, 184, 184, 184, 184, 184, 184, 184, 184, 184, 184, 184, 184, 184, 184, 184, 184, };
var yy_chk: uint8[331] := {0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 36, 3, 4, 4, 36, 4, 21, 21, 21, 21, 24, 24, 24, 24, 25, 25, 25, 25, 28, 28, 30, 30, 31, 39, 57, 39, 43, 3, 24, 31, 77, 4, 91, 196, 77, 63, 195, 31, 193, 43, 24, 182, 64, 64, 64, 64, 66, 91, 24, 110, 57, 65, 65, 65, 65, 66, 66, 179, 110, 110, 64, 119, 119, 178, 177, 174, 57, 172, 171, 57, 166, 57, 64, 63, 67, 57, 63, 111, 63, 165, 64, 164, 63, 67, 67, 67, 111, 111, 111, 185, 185, 185, 185, 185, 185, 185, 186, 163, 162, 186, 186, 186, 186, 187, 187, 187, 187, 158, 187, 187, 188, 188, 189, 157, 156, 155, 189, 189, 189, 190, 153, 190, 190, 190, 190, 190, 191, 151, 191, 191, 191, 191, 191, 192, 192, 194, 194, 150, 149, 146, 145, 144, 143, 142, 141, 140, 139, 131, 129, 127, 126, 124, 123, 122, 120, 118, 116, 115, 114, 113, 109, 108, 107, 106, 105, 104, 95, 94, 93, 92, 89, 88, 87, 85, 84, 83, 82, 81, 79, 76, 75, 62, 58, 49, 48, 47, 46, 45, 44, 42, 41, 40, 38, 37, 29, 26, 15, 10, 9, 7, 5, 184, 184, 184, 184, 184, 184, 184, 184, 184, 184, 184, 184, 184, 184, 184, 184, 184, 184, 184, 184, 184, 184, 184, 184, 184, 184, 184, 184, 184, 184, 184, 184, 184, 184, 184, 184, 184, 184, 184, 184, 184, 184, 184, 184, 184, 184, 184, 184, 184, 184, 184, 184, 184, 184, 184, 184, 184, 184, 184, 184, 184, 184, 184, 184, };
const STATE_INITIAL := 1;
const STATE_STRING := 3;
const YY_ACCEPTING_STATE := 184;
sub perform_action(action: uint8)
# actions between 0 and 79: 76
sub actions_from_0_to_39()
# actions between 0 and 39: 38
sub actions_from_0_to_19()
# actions between 0 and 19: 18
sub actions_from_0_to_9()
# actions between 0 and 9: 8
if action == 1 then
 emit_token(TOKEN_NEOP); 
elseif action == 2 then
 emit_token(TOKEN_PERCENT); 
elseif action == 3 then
 emit_token(TOKEN_AMPERSAND); 
elseif action == 4 then
 emit_token(TOKEN_OPENPAREN); 
elseif action == 5 then
 emit_token(TOKEN_CLOSEPAREN); 
elseif action == 6 then
 emit_token(TOKEN_STAR); 
elseif action == 7 then
 emit_token(TOKEN_PLUS); 
elseif action == 8 then
 emit_token(TOKEN_COMMA); 
end if;
end sub;
sub actions_from_9_to_19()
# actions between 9 and 19: 10
sub actions_from_9_to_14()
# actions between 9 and 14: 5
if action == 9 then
 emit_token(TOKEN_MINUS); 
elseif action == 10 then
 emit_token(TOKEN_DOT); 
elseif action == 11 then
 emit_token(TOKEN_SLASH); 
elseif action == 12 then
 emit_token(TOKEN_COLON); 
elseif action == 13 then
 emit_token(TOKEN_ASSIGN); 
end if;
end sub;
sub actions_from_14_to_19()
# actions between 14 and 19: 5
if action == 14 then
 emit_token(TOKEN_SEMICOLON); 
elseif action == 15 then
 emit_token(TOKEN_LTOP); 
elseif action == 16 then
 emit_token(TOKEN_LEFTSHIFT); 
elseif action == 17 then
 emit_token(TOKEN_LEOP); 
elseif action == 18 then
 emit_token(TOKEN_EQOP); 
end if;
end sub;
if action < 14 then
actions_from_9_to_14();
else
actions_from_14_to_19();
end if;
end sub;
if action < 9 then
actions_from_0_to_9();
else
actions_from_9_to_19();
end if;
end sub;
sub actions_from_19_to_39()
# actions between 19 and 39: 20
sub actions_from_19_to_29()
# actions between 19 and 29: 10
sub actions_from_19_to_24()
# actions between 19 and 24: 5
if action == 19 then
 emit_token(TOKEN_GTOP); 
elseif action == 20 then
 emit_token(TOKEN_GEOP); 
elseif action == 21 then
 emit_token(TOKEN_RIGHTSHIFT); 
elseif action == 22 then
 emit_token(TOKEN_OPENSQUARE); 
elseif action == 23 then
 emit_token(TOKEN_CLOSESQUARE); 
end if;
end sub;
sub actions_from_24_to_29()
# actions between 24 and 29: 5
if action == 24 then
 emit_token(TOKEN_CARET); 
elseif action == 25 then
 emit_token(TOKEN_OPENBRACE); 
elseif action == 26 then
 emit_token(TOKEN_PIPE); 
elseif action == 27 then
 emit_token(TOKEN_CLOSEBRACE); 
elseif action == 28 then
 emit_token(TOKEN_TILDE); 
end if;
end sub;
if action < 24 then
actions_from_19_to_24();
else
actions_from_24_to_29();
end if;
end sub;
sub actions_from_29_to_39()
# actions between 29 and 39: 10
sub actions_from_29_to_34()
# actions between 29 and 34: 5
if action == 29 then
 emit_token(TOKEN_BYTES); 
elseif action == 30 then
 emit_token(TOKEN_INDEX); 
elseif action == 31 then
 emit_token(TOKEN_SEGMENT); 
elseif action == 32 then
 emit_token(TOKEN_SIZE); 
elseif action == 33 then
 emit_token(TOKEN_AND); 
end if;
end sub;
sub actions_from_34_to_39()
# actions between 34 and 39: 5
if action == 34 then
 emit_token(TOKEN_AS); 
elseif action == 35 then
 emit_token(TOKEN_BREAK); 
elseif action == 36 then
 emit_token(TOKEN_CONST); 
elseif action == 37 then
 emit_token(TOKEN_CONTINUE); 
elseif action == 38 then
 emit_token(TOKEN_ELSE); 
end if;
end sub;
if action < 34 then
actions_from_29_to_34();
else
actions_from_34_to_39();
end if;
end sub;
if action < 29 then
actions_from_19_to_29();
else
actions_from_29_to_39();
end if;
end sub;
if action < 19 then
actions_from_0_to_19();
else
actions_from_19_to_39();
end if;
end sub;
sub actions_from_39_to_79()
# actions between 39 and 79: 38
sub actions_from_39_to_59()
# actions between 39 and 59: 20
sub actions_from_39_to_49()
# actions between 39 and 49: 10
sub actions_from_39_to_44()
# actions between 39 and 44: 5
if action == 39 then
 emit_token(TOKEN_ELSEIF); 
elseif action == 40 then
 emit_token(TOKEN_END); 
elseif action == 41 then
 emit_token(TOKEN_GOTO); 
elseif action == 42 then
 emit_token(TOKEN_IF); 
elseif action == 43 then
 emit_token(TOKEN_LOOP); 
end if;
end sub;
sub actions_from_44_to_49()
# actions between 44 and 49: 5
if action == 44 then
 emit_token(TOKEN_NAMESPACE); 
elseif action == 45 then
 emit_token(TOKEN_NOT); 
elseif action == 46 then
 emit_token(TOKEN_OR); 
elseif action == 47 then
 emit_token(TOKEN_RECORD); 
elseif action == 48 then
 emit_token(TOKEN_RETURN); 
end if;
end sub;
if action < 44 then
actions_from_39_to_44();
else
actions_from_44_to_49();
end if;
end sub;
sub actions_from_49_to_59()
# actions between 49 and 59: 10
sub actions_from_49_to_54()
# actions between 49 and 54: 5
if action == 49 then
 emit_token(TOKEN_SUB); 
elseif action == 50 then
 emit_token(TOKEN_THEN); 
elseif action == 51 then
 emit_token(TOKEN_VAR); 
elseif action == 52 then
 emit_token(TOKEN_WHILE); 
elseif action == 53 then
 emit_identifier(); 
end if;
end sub;
sub actions_from_54_to_59()
# actions between 54 and 59: 5
if action == 54 then
 start_state := STATE_STRING; string_start(); 
elseif action == 55 then
 string_add_char('\n'); 
elseif action == 56 then
 string_add_char('\r'); 
elseif action == 57 then
 string_add_char(9); 
elseif action == 58 then
 string_add_char(parse_hex_byte(current_token_start+2)); 
end if;
end sub;
if action < 54 then
actions_from_49_to_54();
else
actions_from_54_to_59();
end if;
end sub;
if action < 49 then
actions_from_39_to_49();
else
actions_from_49_to_59();
end if;
end sub;
sub actions_from_59_to_79()
# actions between 59 and 79: 18
sub actions_from_59_to_69()
# actions between 59 and 69: 10
sub actions_from_59_to_64()
# actions between 59 and 64: 5
if action == 59 then
 string_add_char('"'); 
elseif action == 60 then
 start_state := STATE_INITIAL; string_end(); 
elseif action == 61 then
 print("bogus escape"); fail(); 
elseif action == 62 then
 print("unterminated string"); fail(); 
elseif action == 63 then
 string_add_chars(); 
end if;
end sub;
sub actions_from_64_to_69()
# actions between 64 and 69: 5
if action == 64 then
 emit_small_const('\n'); 
elseif action == 65 then
 emit_small_const('\r'); 
elseif action == 66 then
 emit_small_const(9); 
elseif action == 67 then
 emit_small_const('\''); 
elseif action == 68 then
 emit_small_const(parse_hex_byte(current_token_start+3)); 
end if;
end sub;
if action < 64 then
actions_from_59_to_64();
else
actions_from_64_to_69();
end if;
end sub;
sub actions_from_69_to_79()
# actions between 69 and 79: 8
if action == 69 then
 print("bogus escape"); fail(); 
elseif action == 70 then
 emit_small_const(tokenbuffer[current_token_start+1]); 
elseif action == 71 then
 emit_number(2, 2); 
elseif action == 72 then
 emit_number(8, 2); 
elseif action == 73 then
 emit_number(16, 2); 
elseif action == 74 then
 emit_number(10, 0); 
elseif action == 77 then
 current_line := current_line + 1; 
elseif action == 78 then
 print("unparsable byte 0x"); print_hex_i8(tokenbuffer[current_token_start]); fail(); 
end if;
end sub;
if action < 69 then
actions_from_59_to_69();
else
actions_from_69_to_79();
end if;
end sub;
if action < 59 then
actions_from_39_to_59();
else
actions_from_59_to_79();
end if;
end sub;
if action < 39 then
actions_from_0_to_39();
else
actions_from_39_to_79();
end if;
end sub;
